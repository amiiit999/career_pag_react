{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Mr_amiit/cubedotsProjects/reactForm/react_form/src/components/form/Form.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_PATH = 'http://localhost/Mr_amiit/cubedotsProjects/reactForm/submitform/index.php';\nexport default class Form extends Component {\n  constructor() {\n    super();\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.state = {\n      fields: {},\n      errors: {},\n      selectedFile: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n  }\n\n  handleChange(e) {\n    let fields = this.state.fields;\n    console.log(\"check-\", e.target.files);\n\n    if (e.target.name === 'uploadcv') {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n      fields['uploadcv'] = this.state.selectedFile;\n      console.log(\"hiiii->\", fields['uploadcv']);\n    } else {\n      fields[e.target.name] = e.target.value;\n    }\n\n    this.setState({\n      fields\n    });\n  }\n\n  submituserRegistrationForm(e) {\n    console.log(this.validateForm());\n    e.preventDefault();\n\n    if (this.validateForm()) {\n      const formData = new FormData(); // Update the formData object\n\n      formData.append(\"myFile\", this.state.selectedFile);\n      const formData2 = this.state.fields;\n      const data = {\n        formData\n      }; // Details of the uploaded file\n\n      console.log(\"data->\", data);\n      axios.post(API_PATH, data, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }) // 4\n      .then(response => {\n        console.log(this.state);\n        let fields = {};\n        let selectedFile = {}; // fields[\"username\"] = \"\";\n        // fields[\"emailid\"] = \"\";\n        // fields[\"mobileno\"] = \"\";\n        // fields[\"password\"] = \"\";\n\n        this.setState({\n          fields: fields,\n          selectedFile: selectedFile\n        });\n        console.log(this.state);\n        alert(\"Form submitted\");\n      }) // 5\n      .catch(errors => {\n        this.submitSpinner = false;\n        console.log(errors);\n      });\n    }\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"fullName\"]) {\n      formIsValid = false;\n      errors[\"fullName\"] = \"*Please enter your full name.\";\n    }\n\n    if (typeof fields[\"fullName\"] !== \"undefined\") {\n      if (!fields[\"fullName\"].match(/^[a-zA-Z ]*$/)) {\n        formIsValid = false;\n        errors[\"fullName\"] = \"*Please enter alphabet characters only.\";\n      }\n    }\n\n    if (!fields[\"emailid\"]) {\n      formIsValid = false;\n      errors[\"emailid\"] = \"*Please enter your email-ID.\";\n    }\n\n    if (typeof fields[\"emailid\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n      if (!pattern.test(fields[\"emailid\"])) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter valid email-ID.\";\n      }\n    }\n\n    if (!fields[\"mobileno\"]) {\n      formIsValid = false;\n      errors[\"mobileno\"] = \"*Please enter your mobile no.\";\n    }\n\n    if (typeof fields[\"mobileno\"] !== \"undefined\") {\n      if (!fields[\"mobileno\"].match(/^[0-9]{10}$/)) {\n        formIsValid = false;\n        errors[\"mobileno\"] = \"*Please enter valid mobile no.\";\n      }\n    } // if (!fields[\"uploadcv\"]) {\n    //   formIsValid = false;\n    //   errors[\"uploadcv\"] = \"*Please upload your CV.\";\n    // }\n    // if (typeof fields[\"uploadcv\"] !== \"undefined\") {\n    //   if (!fields[\"uploadcv\"]) {\n    //     formIsValid = false;\n    //     errors[\"uploadcv\"] = \"*Please Upload your file in valid format.\";\n    //   }\n    // }\n\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 m-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-secondary text-light\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Registration page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body text-start\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              method: \"post\",\n              className: \"form\",\n              encType: \"multipart/form-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Full Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"text\",\n                  name: \"fullName\",\n                  value: this.state.fields.fullName,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"errorMsg\",\n                  children: this.state.errors.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Email ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"text\",\n                  name: \"emailid\",\n                  value: this.state.fields.emailid,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"errorMsg\",\n                  children: this.state.errors.emailid\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Mobile No:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"text\",\n                  name: \"mobileno\",\n                  value: this.state.fields.mobileno,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"errorMsg\",\n                  children: this.state.errors.mobileno\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"image\",\n                  children: \"Upload CV:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"file\",\n                  name: \"uploadcv\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"errorMsg\",\n                  children: this.state.errors.uploadcv\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  className: \"btn btn-info\",\n                  onClick: this.submituserRegistrationForm,\n                  value: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/var/www/html/Mr_amiit/cubedotsProjects/reactForm/react_form/src/components/form/Form.js"],"names":["React","Component","axios","API_PATH","Form","constructor","onFileChange","event","setState","selectedFile","target","files","state","fields","errors","handleChange","bind","submituserRegistrationForm","e","console","log","name","value","validateForm","preventDefault","formData","FormData","append","formData2","data","post","headers","then","response","alert","catch","submitSpinner","formIsValid","match","pattern","RegExp","test","render","fullName","emailid","mobileno","uploadcv"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,QAAQ,GAAG,2EAAjB;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAG1CI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAYdC,YAZc,GAYCC,KAAK,IAAI;AAEtB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AAED,KAjBa;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXL,MAAAA,YAAY,EAAE;AAHH,KAAb;AAMA,SAAKM,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,0BAAL,GAAkC,KAAKA,0BAAL,CAAgCD,IAAhC,CAAqC,IAArC,CAAlC;AAED;;AAODD,EAAAA,YAAY,CAACG,CAAD,EAAI;AACd,QAAIL,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,CAAC,CAACR,MAAF,CAASC,KAA9B;;AACA,QAAGO,CAAC,CAACR,MAAF,CAASW,IAAT,KAAkB,UAArB,EAAgC;AAC9B,WAAKb,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAES,CAAC,CAACR,MAAF,CAASC,KAAT,CAAe,CAAf;AAAhB,OAAd;AACFE,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,KAAKD,KAAL,CAAWH,YAAhC;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBP,MAAM,CAAC,UAAD,CAA5B;AACC,KAJD,MAKI;AACFA,MAAAA,MAAM,CAACK,CAAC,CAACR,MAAF,CAASW,IAAV,CAAN,GAAwBH,CAAC,CAACR,MAAF,CAASY,KAAjC;AAED;;AACD,SAAKd,QAAL,CAAc;AACZK,MAAAA;AADY,KAAd;AAKD;;AAEDI,EAAAA,0BAA0B,CAACC,CAAD,EAAI;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,YAAL,EAAZ;AAEAL,IAAAA,CAAC,CAACM,cAAF;;AACA,QAAI,KAAKD,YAAL,EAAJ,EAAyB;AAEvB,YAAME,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAFuB,CAIvB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,KAAKf,KAAL,CAAWH,YAFb;AAOA,YAAMmB,SAAS,GAAI,KAAKhB,KAAL,CAAWC,MAA9B;AACA,YAAMgB,IAAI,GAAG;AAACJ,QAAAA;AAAD,OAAb,CAbuB,CAcvB;;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBS,IAArB;AACF3B,MAAAA,KAAK,CAAC4B,IAAN,CAAW3B,QAAX,EAAoB0B,IAApB,EAAyB;AACvBE,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADc,OAAzB,EAIG;AAJH,OAKIC,IALJ,CAKSC,QAAQ,IAAI;AAEnBd,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACA,YAAIC,MAAM,GAAG,EAAb;AACA,YAAIJ,YAAY,GAAG,EAAnB,CAJmB,CAKnB;AACA;AACA;AACA;;AACA,aAAKD,QAAL,CAAc;AAACK,UAAAA,MAAM,EAACA,MAAR;AAAeJ,UAAAA,YAAY,EAACA;AAA5B,SAAd;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACAsB,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACE,OAjBJ,EAkBI;AAlBJ,OAmBIC,KAnBJ,CAmBUrB,MAAM,IAAI;AAAE,aAAKsB,aAAL,GAAqB,KAArB;AAA4BjB,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AAAqB,OAnBvE;AAoBG;AAEJ;;AAEDS,EAAAA,YAAY,GAAG;AAEb,QAAIV,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIuB,WAAW,GAAG,IAAlB;;AAEA,QAAI,CAACxB,MAAM,CAAC,UAAD,CAAX,EAAyB;AACvBwB,MAAAA,WAAW,GAAG,KAAd;AACAvB,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,+BAArB;AACD;;AAED,QAAI,OAAOD,MAAM,CAAC,UAAD,CAAb,KAA8B,WAAlC,EAA+C;AAC7C,UAAI,CAACA,MAAM,CAAC,UAAD,CAAN,CAAmByB,KAAnB,CAAyB,cAAzB,CAAL,EAA+C;AAC7CD,QAAAA,WAAW,GAAG,KAAd;AACAvB,QAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,yCAArB;AACD;AACF;;AAED,QAAI,CAACD,MAAM,CAAC,SAAD,CAAX,EAAwB;AACtBwB,MAAAA,WAAW,GAAG,KAAd;AACAvB,MAAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,8BAApB;AACD;;AAED,QAAI,OAAOD,MAAM,CAAC,SAAD,CAAb,KAA6B,WAAjC,EAA8C;AAC5C;AACA,UAAI0B,OAAO,GAAG,IAAIC,MAAJ,CAAW,iSAAX,CAAd;;AACA,UAAI,CAACD,OAAO,CAACE,IAAR,CAAa5B,MAAM,CAAC,SAAD,CAAnB,CAAL,EAAsC;AACpCwB,QAAAA,WAAW,GAAG,KAAd;AACAvB,QAAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,+BAApB;AACD;AACF;;AAED,QAAI,CAACD,MAAM,CAAC,UAAD,CAAX,EAAyB;AACvBwB,MAAAA,WAAW,GAAG,KAAd;AACAvB,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,+BAArB;AACD;;AAED,QAAI,OAAOD,MAAM,CAAC,UAAD,CAAb,KAA8B,WAAlC,EAA+C;AAC7C,UAAI,CAACA,MAAM,CAAC,UAAD,CAAN,CAAmByB,KAAnB,CAAyB,aAAzB,CAAL,EAA8C;AAC5CD,QAAAA,WAAW,GAAG,KAAd;AACAvB,QAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,gCAArB;AACD;AACF,KA1CY,CA4Cb;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAKN,QAAL,CAAc;AACZM,MAAAA,MAAM,EAAEA;AADI,KAAd;AAGA,WAAOuB,WAAP;AAGD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BAGE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,qCAAf;AAAA,mCAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAM,cAAA,MAAM,EAAC,MAAb;AAAoB,cAAA,SAAS,EAAC,MAA9B;AAAqC,cAAA,OAAO,EAAC,qBAA7C;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAGE;AAAO,kBAAA,SAAS,EAAC,cAAjB;AAAgC,kBAAA,IAAI,EAAC,MAArC;AAA4C,kBAAA,IAAI,EAAC,UAAjD;AAA4D,kBAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWC,MAAX,CAAkB8B,QAArF;AAA+F,kBAAA,QAAQ,EAAE,KAAK5B;AAA9G;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,4BAA2B,KAAKH,KAAL,CAAWE,MAAX,CAAkB6B;AAA7C;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEQ;AAAO,kBAAA,SAAS,EAAC,cAAjB;AAAgC,kBAAA,IAAI,EAAC,MAArC;AAA4C,kBAAA,IAAI,EAAC,SAAjD;AAA2D,kBAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWC,MAAX,CAAkB+B,OAApF;AAA6F,kBAAA,QAAQ,EAAE,KAAK7B;AAA5G;AAAA;AAAA;AAAA;AAAA,wBAFR,eAGQ;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,4BAA2B,KAAKH,KAAL,CAAWE,MAAX,CAAkB8B;AAA7C;AAAA;AAAA;AAAA;AAAA,wBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,eAgBE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEQ;AAAO,kBAAA,SAAS,EAAC,cAAjB;AAAgC,kBAAA,IAAI,EAAC,MAArC;AAA4C,kBAAA,IAAI,EAAC,UAAjD;AAA4D,kBAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWC,MAAX,CAAkBgC,QAArF;AAA+F,kBAAA,QAAQ,EAAE,KAAK9B;AAA9G;AAAA;AAAA;AAAA;AAAA,wBAFR,eAGQ;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,4BAA2B,KAAKH,KAAL,CAAWE,MAAX,CAAkB+B;AAA7C;AAAA;AAAA;AAAA;AAAA,wBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBF,eAsBI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACA;AAAO,kBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA;AAAO,kBAAA,SAAS,EAAC,cAAjB;AAAgC,kBAAA,IAAI,EAAC,MAArC;AAA4C,kBAAA,IAAI,EAAC,UAAjD;AAA4D,kBAAA,QAAQ,EAAE,KAAK9B;AAA3E;AAAA;AAAA;AAAA;AAAA,wBAFA,eAGA;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,4BAA2B,KAAKH,KAAL,CAAWE,MAAX,CAAkBgC;AAA7C;AAAA;AAAA;AAAA;AAAA,wBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBJ,eA4BE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACA;AAAO,kBAAA,IAAI,EAAC,QAAZ;AAAqB,kBAAA,SAAS,EAAC,cAA/B;AAA+C,kBAAA,OAAO,EAAE,KAAK7B,0BAA7D;AAAyF,kBAAA,KAAK,EAAC;AAA/F;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2DD;;AAhNyC","sourcesContent":["import React, { Component } from 'react'\nimport axios from \"axios\";\nconst API_PATH = 'http://localhost/Mr_amiit/cubedotsProjects/reactForm/submitform/index.php';\n\nexport default class Form extends Component {\n\n\n  constructor() {\n    super();\n    this.state = {\n      fields: {},\n      errors: {},\n      selectedFile: null\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n  };\n  onFileChange = event => {\n    \n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });\n  \n  };\n  handleChange(e) {\n    let fields = this.state.fields;\n    console.log(\"check-\",e.target.files)\n    if(e.target.name === 'uploadcv'){\n      this.setState({ selectedFile: e.target.files[0] });\n    fields['uploadcv'] = this.state.selectedFile;\n    console.log(\"hiiii->\",fields['uploadcv'])\n    }\n    else{\n      fields[e.target.name] = e.target.value;\n      \n    }\n    this.setState({\n      fields\n    });\n  \n\n  }\n\n  submituserRegistrationForm(e) {\n    console.log(this.validateForm());\n    \n    e.preventDefault();\n    if (this.validateForm()) {\n      \n      const formData = new FormData();\n    \n      // Update the formData object\n      formData.append(\n        \"myFile\",\n        this.state.selectedFile,\n        \n      );\n      \n    \n      const formData2  = this.state.fields  \n      const data = {formData}\n      // Details of the uploaded file\n      console.log(\"data->\",data);\n    axios.post(API_PATH,data,{\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }) // 4\n       .then(response => {\n        \n      console.log(this.state);\n      let fields = {};\n      let selectedFile = {};\n      // fields[\"username\"] = \"\";\n      // fields[\"emailid\"] = \"\";\n      // fields[\"mobileno\"] = \"\";\n      // fields[\"password\"] = \"\";\n      this.setState({fields:fields,selectedFile:selectedFile});\n      console.log(this.state);\n      alert(\"Form submitted\");\n       }\n      ) // 5\n       .catch(errors => { this.submitSpinner = false; console.log(errors) })\n      }\n    \n  }\n\n  validateForm() {\n\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"fullName\"]) {\n      formIsValid = false;\n      errors[\"fullName\"] = \"*Please enter your full name.\";\n    }\n\n    if (typeof fields[\"fullName\"] !== \"undefined\") {\n      if (!fields[\"fullName\"].match(/^[a-zA-Z ]*$/)) {\n        formIsValid = false;\n        errors[\"fullName\"] = \"*Please enter alphabet characters only.\";\n      }\n    }\n\n    if (!fields[\"emailid\"]) {\n      formIsValid = false;\n      errors[\"emailid\"] = \"*Please enter your email-ID.\";\n    }\n\n    if (typeof fields[\"emailid\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n      if (!pattern.test(fields[\"emailid\"])) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter valid email-ID.\";\n      }\n    }\n\n    if (!fields[\"mobileno\"]) {\n      formIsValid = false;\n      errors[\"mobileno\"] = \"*Please enter your mobile no.\";\n    }\n\n    if (typeof fields[\"mobileno\"] !== \"undefined\") {\n      if (!fields[\"mobileno\"].match(/^[0-9]{10}$/)) {\n        formIsValid = false;\n        errors[\"mobileno\"] = \"*Please enter valid mobile no.\";\n      }\n    }\n\n    // if (!fields[\"uploadcv\"]) {\n    //   formIsValid = false;\n    //   errors[\"uploadcv\"] = \"*Please upload your CV.\";\n    // }\n\n    // if (typeof fields[\"uploadcv\"] !== \"undefined\") {\n    //   if (!fields[\"uploadcv\"]) {\n    //     formIsValid = false;\n    //     errors[\"uploadcv\"] = \"*Please Upload your file in valid format.\";\n    //   }\n    // }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n\n\n  }\n  \n  render() {\n    return (\n      <div className=\"row mt-5\">\n        <div className=\"col-md-6 m-auto\">\n\n\n          <div className=\"card\">\n            <div className=\"card-header bg-secondary text-light\"><h3>Registration page</h3></div>\n            <div className=\"card-body text-start\">\n              <form method=\"post\" className=\"form\" encType=\"multipart/form-data\">\n                <div className=\"form-group\">\n                  <label>Full Name:</label>\n\n                  <input className=\"form-control\" type=\"text\" name=\"fullName\" value={this.state.fields.fullName} onChange={this.handleChange}></input>\n                  <div className=\"errorMsg\">{this.state.errors.fullName}</div>\n                </div>\n\n               \n\n                <div className=\"form-group\">\n                <label>Email ID:</label>\n                        <input className=\"form-control\" type=\"text\" name=\"emailid\" value={this.state.fields.emailid} onChange={this.handleChange} />\n                        <div className=\"errorMsg\">{this.state.errors.emailid}</div>\n                </div>\n               \n                <div className=\"form-group\">\n                <label>Mobile No:</label>\n                        <input className=\"form-control\" type=\"text\" name=\"mobileno\" value={this.state.fields.mobileno} onChange={this.handleChange} />\n                        <div className=\"errorMsg\">{this.state.errors.mobileno}</div>\n                </div>\n\n                  <div className=\"form-group\">\n                  <label htmlFor='image'>Upload CV:</label>\n                  <input className=\"form-control\" type=\"file\" name=\"uploadcv\" onChange={this.handleChange} />\n                  <div className=\"errorMsg\">{this.state.errors.uploadcv}</div>\n                  </div>\n\n                <div className=\"form-group\">\n                <input type=\"button\" className=\"btn btn-info\"  onClick={this.submituserRegistrationForm} value=\"Register\" /> \n                </div>\n              </form>\n            </div>\n          </div>\n          {/* <label>Name</label>\n                        <input type=\"text\" name=\"username\" value={this.state.fields.username} onChange={this.handleChange} />\n                        <div className=\"errorMsg\">{this.state.errors.username}</div>\n                        <label>Email ID:</label>\n                        <input type=\"text\" name=\"emailid\" value={this.state.fields.emailid} onChange={this.handleChange} />\n                        <div className=\"errorMsg\">{this.state.errors.emailid}</div>\n                        <label>Mobile No:</label>\n                        <input type=\"text\" name=\"mobileno\" value={this.state.fields.mobileno} onChange={this.handleChange} />\n                        <div className=\"errorMsg\">{this.state.errors.mobileno}</div>\n                        <label>Password</label>\n                        <input type=\"password\" name=\"password\" value={this.state.fields.password} onChange={this.handleChange} />\n                        <div className=\"errorMsg\">{this.state.errors.password}</div>\n                        <input type=\"submit\" className=\"button\" value=\"Register\" /> */}\n\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}